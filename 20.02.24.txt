import time
import requests
import asyncio
import aiohttp

async def fetch_url(url):
    async with aiohttp.ClientSession() as session:
        async with session.get(url) as response:
            return await response.text()

async def fetch_urls(urls):
    tasks = [fetch_url(url) for url in urls]
    return await asyncio.gather(*tasks)

urls = ["https://jsonplaceholder.typicode.com/posts/1"] * 100

# Синхронное выполнение
start_time = time.time()
responses = asyncio.run(fetch_urls(urls))
end_time = time.time()
print(f"Time taken for synchronous execution: {end_time - start_time} seconds")

# Асинхронное выполнение
start_time = time.time()
loop = asyncio.get_event_loop()
responses = loop.run_until_complete(fetch_urls(urls))
end_time = time.time()
print(f"Time taken for asynchronous execution: {end_time - start_time} seconds")
